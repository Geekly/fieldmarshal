package net.geeklythings.fieldmarshal;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


import javax.persistence.EntityManagerFactory;
import net.geeklythings.fieldmarshal.jpa.TournamentJpaController;
import net.geeklythings.fieldmarshal.managers.PlayerManager;
import net.geeklythings.fieldmarshal.managers.TournamentManager;


/**
 * FieldMarshal is an application for organizing and running Warmachine 
 * tournaments. FieldMarshal is the main class and entry point for 
 * the application.
 * @author Keith Hooks
 */
public class FieldMarshal extends javax.swing.JFrame {
    
    static final String TOURNAMENT_PROP = "Active Tournament";
    private final EntityManagerFactory _emf;
    TournamentJpaController tournamentJpaController;
    TournamentManager tournamentManager; // = new TournamentManager(this);
    PlayerManager playerManager;
    
    /**
     * Creates new application form MainJFrame and initializes the 
     * Jpa controller, tournament manager, and player manager.
     */
    public FieldMarshal() {
        
        _emf = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("FieldMarshalMySqlPU");
        tournamentJpaController = new TournamentJpaController(_emf);
        tournamentManager = new TournamentManager( tournamentJpaController ); 
        //playerManager = new PlayerManager( _emf );
        initComponents();
       
        //loadTournamentView.setEntityManager(_em);
        loadView.setManager(tournamentManager);
        //loadView.addPropertyChangeListener(tournamentManager);
        //loadView.updateList();
        
        ///tournamentManager.addObserver(tournamentView);
        ///tournamentManager.addObserver(playersView);      
        
        tournamentView.setManager(tournamentManager);
        //playersView.setManager(tournamentManager);
        
               
        //tournamentView.updateView();
        //playersView.updateView();
        playersView.setManager(tournamentManager);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        loadView = new net.geeklythings.fieldmarshal.ui.LoadView();
        tournamentView = new net.geeklythings.fieldmarshal.ui.TournamentView();
        playersView = new net.geeklythings.fieldmarshal.ui.PlayersView();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTabbedPane1.addTab("Load Tournament", loadView);
        jTabbedPane1.addTab("Tournament Details", tournamentView);
        jTabbedPane1.addTab("Players", playersView);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 994, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (this._emf != null) {
            _emf.close();
        }

    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FieldMarshal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FieldMarshal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FieldMarshal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FieldMarshal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FieldMarshal().setVisible(true);
            }
        });
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane jTabbedPane1;
    private net.geeklythings.fieldmarshal.ui.LoadView loadView;
    private net.geeklythings.fieldmarshal.ui.PlayersView playersView;
    private net.geeklythings.fieldmarshal.ui.TournamentView tournamentView;
    // End of variables declaration//GEN-END:variables

    
}
